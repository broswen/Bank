service: bank
frameworkVersion: '2'

plugins:
  - serverless-plugin-typescript

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221
  stage: dev
  region: us-east-1

  logs:
    httpApi: true

  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - dynamodb:PutItem
        - dynamodb:GetItem
        - dynamodb:BatchWriteItem
      Resource:
        - !GetAtt RoutingTable.Arn
    - Effect: "Allow"
      Action:
        - s3:GetObject
      Resource:
        - !GetAtt DataBucket.Arn
        - !Join ["/", [!GetAtt DataBucket.Arn, "*"]]


  environment:
    ROUTING_TABLE: !Ref RoutingTable
    DATA_BUCKET: !Ref DataBucket
    FILE: rn.csv

functions:
  LookupBank:
    handler: src/lambdas/LookupBank.handler 
    timeout: 2
    memorySize: 128
    reservedConcurrency: 10
    events:
      - httpApi:
          path: /bank/{rn}
          method: get
  UpdateData:
    handler: src/lambdas/UpdateData.handler
    timeout: 10
    memorySize: 512
    reservedConcurrency: 1
    events:
      - schedule:
          rate: cron(0 0 1 * ? *)
          enabled: false

# you can add CloudFormation resource templates here
resources:
  Resources:
    DataBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:service}-${self:provider.stage}-data-bucket
    
    RoutingTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: PK
            AttributeType: S
        KeySchema:
          - AttributeName: PK
            KeyType: HASH
        TableName: ${self:service}-${self:provider.stage}-routing-table
        BillingMode: PAY_PER_REQUEST